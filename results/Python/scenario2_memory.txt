ine #    Mem usage    Increment  Occurences   Line Contents
============================================================
    41     79.6 MiB     79.6 MiB           1   @profile
    42                                         def main():
    43     79.6 MiB      0.0 MiB           1   	cmd = ns.core.CommandLine()
    44     79.6 MiB      0.0 MiB           1   	cmd.nCsma = 3
    45     79.6 MiB      0.0 MiB           1   	cmd.verbose = "True"
    46     79.6 MiB      0.0 MiB           1   	cmd.nWifi = 3
    47     79.6 MiB      0.0 MiB           1   	cmd.tracing = "False"
    48                                         
    49     79.6 MiB      0.0 MiB           1   	cmd.AddValue("nCsma", "Number of \"extra\" CSMA nodes/devices")
    50     79.6 MiB      0.0 MiB           1   	cmd.AddValue("nWifi", "Number of wifi STA devices")
    51     79.6 MiB      0.0 MiB           1   	cmd.AddValue("verbose", "Tell echo applications to log if true")
    52     79.6 MiB      0.0 MiB           1   	cmd.AddValue("tracing", "Enable pcap tracing")
    53                                         
    54     79.6 MiB      0.0 MiB           1   	cmd.Parse(sys.argv)
    55                                         
    56     79.6 MiB      0.0 MiB           1   	nCsma = int(cmd.nCsma)
    57     79.6 MiB      0.0 MiB           1   	verbose = cmd.verbose
    58     79.6 MiB      0.0 MiB           1   	nWifi = int(cmd.nWifi)
    59     79.6 MiB      0.0 MiB           1   	tracing = cmd.tracing
    60                                         
    61                                         	# The underlying restriction of 18 is due to the grid position
    62                                         	# allocator's configuration; the grid layout will exceed the
    63                                         	# bounding box if more than 18 nodes are provided.
    64     79.6 MiB      0.0 MiB           1   	if nWifi > 18:
    65                                         		print ("nWifi should be 18 or less; otherwise grid layout exceeds the bounding box")
    66                                         		sys.exit(1)
    67                                         
    68     79.6 MiB      0.0 MiB           1   	if verbose == "True":
    69     79.6 MiB      0.0 MiB           1   		ns.core.LogComponentEnable("UdpEchoClientApplication", ns.core.LOG_LEVEL_INFO)
    70     79.6 MiB      0.0 MiB           1   		ns.core.LogComponentEnable("UdpEchoServerApplication", ns.core.LOG_LEVEL_INFO)
    71                                         
    72     79.6 MiB      0.0 MiB           1   	p2pNodes = ns.network.NodeContainer()
    73     79.8 MiB      0.3 MiB           1   	p2pNodes.Create(2)
    74                                         
    75     79.8 MiB      0.0 MiB           1   	pointToPoint = ns.point_to_point.PointToPointHelper()
    76     79.8 MiB      0.0 MiB           1   	pointToPoint.SetDeviceAttribute("DataRate", ns.core.StringValue("5Mbps"))
    77     79.8 MiB      0.0 MiB           1   	pointToPoint.SetChannelAttribute("Delay", ns.core.StringValue("2ms"))
    78                                         
    79     79.8 MiB      0.0 MiB           1   	p2pDevices = pointToPoint.Install(p2pNodes)
    80                                         
    81     79.8 MiB      0.0 MiB           1   	csmaNodes = ns.network.NodeContainer()
    82     79.8 MiB      0.0 MiB           1   	csmaNodes.Add(p2pNodes.Get(1))
    83     79.8 MiB      0.0 MiB           1   	csmaNodes.Create(nCsma)
    84                                         
    85     79.8 MiB      0.0 MiB           1   	csma = ns.csma.CsmaHelper()
    86     79.8 MiB      0.0 MiB           1   	csma.SetChannelAttribute("DataRate", ns.core.StringValue("100Mbps"))
    87     79.8 MiB      0.0 MiB           1   	csma.SetChannelAttribute("Delay", ns.core.TimeValue(ns.core.NanoSeconds(6560)))
    88                                         
    89     80.3 MiB      0.4 MiB           1   	csmaDevices = csma.Install(csmaNodes)
    90                                         
    91     80.3 MiB      0.0 MiB           1   	wifiStaNodes = ns.network.NodeContainer()
    92     80.3 MiB      0.0 MiB           1   	wifiStaNodes.Create(nWifi)
    93     80.3 MiB      0.0 MiB           1   	wifiApNode = p2pNodes.Get(0)
    94                                         
    95     80.3 MiB      0.0 MiB           1   	channel = ns.wifi.YansWifiChannelHelper.Default()
    96     80.3 MiB      0.0 MiB           1   	phy = ns.wifi.YansWifiPhyHelper.Default()
    97     80.3 MiB      0.0 MiB           1   	phy.SetChannel(channel.Create())
    98                                         
    99     80.3 MiB      0.0 MiB           1   	wifi = ns.wifi.WifiHelper()
   100     80.3 MiB      0.0 MiB           1   	wifi.SetRemoteStationManager("ns3::AarfWifiManager")
   101                                         
   102     80.3 MiB      0.0 MiB           1   	mac = ns.wifi.WifiMacHelper()
   103     80.3 MiB      0.0 MiB           1   	ssid = ns.wifi.Ssid ("ns-3-ssid")
   104                                         
   105     80.3 MiB      0.0 MiB           1   	mac.SetType ("ns3::StaWifiMac", "Ssid", ns.wifi.SsidValue(ssid), "ActiveProbing", ns.core.BooleanValue(False))
   106     80.7 MiB      0.5 MiB           1   	staDevices = wifi.Install(phy, mac, wifiStaNodes)
   107                                         
   108     80.7 MiB      0.0 MiB           1   	mac.SetType("ns3::ApWifiMac","Ssid", ns.wifi.SsidValue (ssid))
   109     80.7 MiB      0.0 MiB           1   	apDevices = wifi.Install(phy, mac, wifiApNode)
   110                                         
   111     80.7 MiB      0.0 MiB           1   	mobility = ns.mobility.MobilityHelper()
   112     80.7 MiB      0.0 MiB           2   	mobility.SetPositionAllocator ("ns3::GridPositionAllocator", "MinX", ns.core.DoubleValue(0.0), 
   113     80.7 MiB      0.0 MiB           1   						"MinY", ns.core.DoubleValue (0.0), "DeltaX", ns.core.DoubleValue(5.0), "DeltaY", ns.core.DoubleValue(10.0), 
   114     80.7 MiB      0.0 MiB           1   		 "GridWidth", ns.core.UintegerValue(3), "LayoutType", ns.core.StringValue("RowFirst"))
   115                                         		 
   116     80.7 MiB      0.0 MiB           1   	mobility.SetMobilityModel ("ns3::RandomWalk2dMobilityModel", "Bounds", ns.mobility.RectangleValue(ns.mobility.Rectangle (-50, 50, -50, 50)))
   117     80.7 MiB      0.0 MiB           1   	mobility.Install(wifiStaNodes)
   118                                         
   119     80.7 MiB      0.0 MiB           1   	mobility.SetMobilityModel("ns3::ConstantPositionMobilityModel")
   120     80.7 MiB      0.0 MiB           1   	mobility.Install(wifiApNode)
   121                                         
   122     80.7 MiB      0.0 MiB           1   	stack = ns.internet.InternetStackHelper()
   123     81.1 MiB      0.3 MiB           1   	stack.Install(csmaNodes)
   124     81.1 MiB      0.0 MiB           1   	stack.Install(wifiApNode)
   125     81.1 MiB      0.0 MiB           1   	stack.Install(wifiStaNodes)
   126                                         
   127     81.1 MiB      0.0 MiB           1   	address = ns.internet.Ipv4AddressHelper()
   128     81.1 MiB      0.0 MiB           1   	address.SetBase(ns.network.Ipv4Address("10.1.1.0"), ns.network.Ipv4Mask("255.255.255.0"))
   129     81.1 MiB      0.0 MiB           1   	p2pInterfaces = address.Assign(p2pDevices)
   130                                         
   131     81.1 MiB      0.0 MiB           1   	address.SetBase(ns.network.Ipv4Address("10.1.2.0"), ns.network.Ipv4Mask("255.255.255.0"))
   132     81.1 MiB      0.0 MiB           1   	csmaInterfaces = address.Assign(csmaDevices)
   133                                         
   134     81.1 MiB      0.0 MiB           1   	address.SetBase(ns.network.Ipv4Address("10.1.3.0"), ns.network.Ipv4Mask("255.255.255.0"))
   135     81.1 MiB      0.0 MiB           1   	address.Assign(staDevices)
   136     81.1 MiB      0.0 MiB           1   	address.Assign(apDevices)
   137                                         
   138     81.1 MiB      0.0 MiB           1   	echoServer = ns.applications.UdpEchoServerHelper(9)
   139                                         
   140     81.7 MiB      0.6 MiB           1   	serverApps = echoServer.Install(csmaNodes.Get(nCsma))
   141     81.7 MiB      0.0 MiB           1   	serverApps.Start(ns.core.Seconds(1.0))
   142     81.7 MiB      0.0 MiB           1   	serverApps.Stop(ns.core.Seconds(10.0))
   143                                         
   144     81.7 MiB      0.0 MiB           1   	echoClient = ns.applications.UdpEchoClientHelper(csmaInterfaces.GetAddress(nCsma), 9)
   145     81.7 MiB      0.0 MiB           1   	echoClient.SetAttribute("MaxPackets", ns.core.UintegerValue(1))
   146     81.7 MiB      0.0 MiB           1   	echoClient.SetAttribute("Interval", ns.core.TimeValue(ns.core.Seconds (1.0)))
   147     81.7 MiB      0.0 MiB           1   	echoClient.SetAttribute("PacketSize", ns.core.UintegerValue(1024))
   148                                         
   149     81.7 MiB      0.0 MiB           1   	clientApps = echoClient.Install(wifiStaNodes.Get (nWifi - 1))
   150     81.7 MiB      0.0 MiB           1   	clientApps.Start(ns.core.Seconds(2.0))
   151     81.7 MiB      0.0 MiB           1   	clientApps.Stop(ns.core.Seconds(10.0))
   152                                         
   153     81.7 MiB      0.0 MiB           1   	ns.internet.Ipv4GlobalRoutingHelper.PopulateRoutingTables()
   154                                         
   155     81.7 MiB      0.0 MiB           1   	ns.core.Simulator.Stop(ns.core.Seconds(10.0))
   156                                         
   157     81.7 MiB      0.0 MiB           1   	if tracing == "True":
   158                                         		pointToPoint.EnablePcapAll ("third")
   159                                         		phy.EnablePcap ("third", apDevices.Get (0))
   160                                         		csma.EnablePcap ("third", csmaDevices.Get (0), True)
   161                                         
   162     81.8 MiB      0.1 MiB           1   	ns.core.Simulator.Run()
   163     81.8 MiB      0.0 MiB           1   	ns.core.Simulator.Destroy()
